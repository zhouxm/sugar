spark.dynamicAllocation.enabled,FALSE,"Whether to use dynamic resource allocation, which scales the number of executors registered with this application up and down based on the workload. For more detail, see the description here. 

This requires spark.shuffle.service.enabled to be set. The following configurations are also relevant:spark.dynamicAllocation.minExecutors,spark.dynamicAllocation.maxExecutors, andspark.dynamicAllocation.initialExecutors",10
spark.dynamicAllocation.executorIdleTimeout,60s,"If dynamic allocation is enabled and an executor has been idle for more than this duration, the executor will be removed. For more detail, see this description.",10
spark.dynamicAllocation.cachedExecutorIdleTimeout,infinity,"If dynamic allocation is enabled and an executor which has cached data blocks has been idle for more than this duration, the executor will be removed. For more details, see this description.",10
spark.dynamicAllocation.initialExecutors,spark.dynamicAllocation.minExecutors,"Initial number of executors to run if dynamic allocation is enabled. 

If `--num-executors` (or `spark.executor.instances`) is set and larger than this value, it will be used as the initial number of executors.",10
spark.dynamicAllocation.maxExecutors,infinity,Upper bound for the number of executors if dynamic allocation is enabled.,10
spark.dynamicAllocation.minExecutors,0,Lower bound for the number of executors if dynamic allocation is enabled.,10
spark.dynamicAllocation.schedulerBacklogTimeout,1s,"If dynamic allocation is enabled and there have been pending tasks backlogged for more than this duration, new executors will be requested. For more detail, see this description.",10
spark.dynamicAllocation.sustainedSchedulerBacklogTimeout,schedulerBacklogTimeout,"Same as spark.dynamicAllocation.schedulerBacklogTimeout, but used only for subsequent executor requests. For more detail, see this description.",10